workspace:
  base: /srv/app
  path: src/github.com/umschlag/umschlag-go

branches:
  - master

pipeline:
  cache-restore:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    restore: true
    when:
      local: false

  sdk-prepare:
    image: webhippie/golang:edge
    pull: true
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make clean
      - make retool
      - make sync
      - make generate

  sdk-vet:
    image: webhippie/golang:edge
    pull: true
    group: app
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make vet

  sdk-check:
    image: webhippie/golang:edge
    pull: true
    group: app
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make megacheck

  sdk-lint:
    image: webhippie/golang:edge
    pull: true
    group: app
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make lint

  sdk-test:
    image: webhippie/golang:edge
    pull: true
    group: app
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make test

  sdk-build:
    image: webhippie/golang:edge
    pull: true
    group: app
    environment:
      - CGO_ENABLED=0
      - GOPATH=/srv/app
      - TAGS=
    commands:
      - make build

  sdk-coverage:
    image: plugins/codacy:1
    pull: true
    secrets: [ codacy_token ]
    when:
      local: false

  cache-rebuild:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    rebuild: true
    mount:
      - vendor/
      - _tools/
    when:
      local: false
      event: [ push ]
      branch: master

  cache-flush:
    image: plugins/s3-cache:1
    pull: true
    secrets: [ cache_s3_endpoint, cache_s3_access_key, cache_s3_secret_key ]
    flush: true
    flush_age: 14
    when:
      local: false
      event: [ push ]
      branch: master

  notify-matrix:
    image: plugins/matrix:1
    pull: true
    secrets: [ matrix_roomid, matrix_username, matrix_password ]
    when:
      local: false
      events: [ push, tag ]
      status: [ changed, failure ]
