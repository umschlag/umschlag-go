// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/umschlag/umschlag-go/models"
)

// TokenProfileReader is a Reader for the TokenProfile structure.
type TokenProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TokenProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTokenProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewTokenProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewTokenProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewTokenProfileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTokenProfileOK creates a TokenProfileOK with default headers values
func NewTokenProfileOK() *TokenProfileOK {
	return &TokenProfileOK{}
}

/*TokenProfileOK handles this case with default header values.

The unlimited auth token
*/
type TokenProfileOK struct {
	Payload *models.AuthToken
}

func (o *TokenProfileOK) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileOK  %+v", 200, o.Payload)
}

func (o *TokenProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthToken)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTokenProfileForbidden creates a TokenProfileForbidden with default headers values
func NewTokenProfileForbidden() *TokenProfileForbidden {
	return &TokenProfileForbidden{}
}

/*TokenProfileForbidden handles this case with default header values.

User is not authorized
*/
type TokenProfileForbidden struct {
	Payload *models.GeneralError
}

func (o *TokenProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileForbidden  %+v", 403, o.Payload)
}

func (o *TokenProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTokenProfileInternalServerError creates a TokenProfileInternalServerError with default headers values
func NewTokenProfileInternalServerError() *TokenProfileInternalServerError {
	return &TokenProfileInternalServerError{}
}

/*TokenProfileInternalServerError handles this case with default header values.

Failed to generate a token
*/
type TokenProfileInternalServerError struct {
	Payload *models.GeneralError
}

func (o *TokenProfileInternalServerError) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] tokenProfileInternalServerError  %+v", 500, o.Payload)
}

func (o *TokenProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTokenProfileDefault creates a TokenProfileDefault with default headers values
func NewTokenProfileDefault(code int) *TokenProfileDefault {
	return &TokenProfileDefault{
		_statusCode: code,
	}
}

/*TokenProfileDefault handles this case with default header values.

Some error unrelated to the handler
*/
type TokenProfileDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the token profile default response
func (o *TokenProfileDefault) Code() int {
	return o._statusCode
}

func (o *TokenProfileDefault) Error() string {
	return fmt.Sprintf("[GET /profile/token][%d] TokenProfile default  %+v", o._statusCode, o.Payload)
}

func (o *TokenProfileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
