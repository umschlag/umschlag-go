// Code generated by go-swagger; DO NOT EDIT.

package team

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/umschlag/umschlag-go/models"
)

// ListTeamsReader is a Reader for the ListTeams structure.
type ListTeamsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTeamsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListTeamsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewListTeamsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListTeamsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListTeamsOK creates a ListTeamsOK with default headers values
func NewListTeamsOK() *ListTeamsOK {
	return &ListTeamsOK{}
}

/*ListTeamsOK handles this case with default header values.

A collection of teams
*/
type ListTeamsOK struct {
	Payload []*models.Team
}

func (o *ListTeamsOK) Error() string {
	return fmt.Sprintf("[GET /teams][%d] listTeamsOK  %+v", 200, o.Payload)
}

func (o *ListTeamsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTeamsForbidden creates a ListTeamsForbidden with default headers values
func NewListTeamsForbidden() *ListTeamsForbidden {
	return &ListTeamsForbidden{}
}

/*ListTeamsForbidden handles this case with default header values.

User is not authorized
*/
type ListTeamsForbidden struct {
	Payload *models.GeneralError
}

func (o *ListTeamsForbidden) Error() string {
	return fmt.Sprintf("[GET /teams][%d] listTeamsForbidden  %+v", 403, o.Payload)
}

func (o *ListTeamsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTeamsDefault creates a ListTeamsDefault with default headers values
func NewListTeamsDefault(code int) *ListTeamsDefault {
	return &ListTeamsDefault{
		_statusCode: code,
	}
}

/*ListTeamsDefault handles this case with default header values.

Some error unrelated to the handler
*/
type ListTeamsDefault struct {
	_statusCode int

	Payload *models.GeneralError
}

// Code gets the status code for the list teams default response
func (o *ListTeamsDefault) Code() int {
	return o._statusCode
}

func (o *ListTeamsDefault) Error() string {
	return fmt.Sprintf("[GET /teams][%d] ListTeams default  %+v", o._statusCode, o.Payload)
}

func (o *ListTeamsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GeneralError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
